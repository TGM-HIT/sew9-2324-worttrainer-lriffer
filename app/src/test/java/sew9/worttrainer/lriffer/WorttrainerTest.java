/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sew9.worttrainer.lriffer;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.io.IOException;

class WorttrainerTest {
    /*
     * Funktion vom Laden wird getestet
     */
    @Test void LadenTest() {
        WortListe wortliste = new WortListe();
        WortTrainer trainer = new WortTrainer(wortliste);
        SpeichernUndLaden speichernladen = new SpeichernUndLaden(trainer);
        try {
            speichernladen.laden("LadenTest.txt");
        } catch (IOException e) {
            System.out.println("Laden fehlgeschlagen");
        }
        assertEquals(15,trainer.getQuestions());
        assertEquals(10,trainer.getRight());
        assertEquals(5,trainer.getWrong());
    }

    /*
     * Funktion von Speichern wird getestet
     */
    @Test void SpeichernTest() {
        WortListe wortliste = new WortListe();
        WortTrainer trainer = new WortTrainer(wortliste);
        trainer.addQuestions(7);
        trainer.addRight(2);
        trainer.addWrong(5);
        SpeichernUndLaden speichernladen = new SpeichernUndLaden(trainer);
        try {
            speichernladen.speichern("SpeichernTest.txt");
        } catch (IOException e) {
            System.out.println("Speichern fehlgeschlagen");
        }
    }

    /*
     * Funktion von Speichern und Laden kombiniert wird getestet
     */
    @Test void SpeichernUndLadenTest() {
        WortListe wortliste = new WortListe();
        WortTrainer trainer = new WortTrainer(wortliste);
        trainer.addQuestions(3);
        trainer.addRight(2);
        trainer.addWrong(5);
        int richtig=0, falsch = 0, fragen = 0;
        SpeichernUndLaden speichernladen = new SpeichernUndLaden(trainer);
        try {
            speichernladen.speichern("SpeichernUndLadenTest.txt");
            fragen = trainer.getQuestions();
            richtig = trainer.getRight();
            falsch = trainer.getWrong();
            speichernladen.laden("SpeichernUndLadenTest.txt");
        } catch (IOException e) {
            System.out.println("Speichern/Laden fehlgeschlagen");
        }
        assertEquals(fragen+3, trainer.getQuestions());
        assertEquals(richtig+2,trainer.getRight());
        assertEquals(falsch+5,trainer.getWrong());
    }

    /*
     * Funktion der Wortliste wird getestet
     */
    @Test void WortlisteTest() {
        WortEintrag we4 = new WortEintrag("Brot", "https://www.ndr.de/ratgeber/kochen/brot524_v-fullhd.jpg");
        WortEintrag we5 = new WortEintrag("Haus", "https://www.snoozeproject.de/files/uploads/2021/12/Traumdeutung-Haus.jpg");
        WortEintrag we6 = new WortEintrag("Haare", "https://meraki-hairdesign.ch/wp-content/uploads/2021/07/haare-faerben-600.jpg");

        WortListe wl = new WortListe();
        wl.addWort(we4);
        wl.addWort(we5);
        wl.addWort(we6);

        assertEquals("Haus", wl.getEintrag(1).getWort());
        assertEquals("https://www.snoozeproject.de/files/uploads/2021/12/Traumdeutung-Haus.jpg", wl.getEintrag(1).getUrl());
    }
}
